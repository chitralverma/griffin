{
  "name": "prof_streaming",
  "process.type": "streaming",
  "data.sources": [
    {
      "name": "source",
      "type": "kafka",
      "dataframe.name": "kafka",
      "config": {
        "options": {
          "kafka.bootstrap.servers": "localhost:9092",
          "subscribe": "quickstart-events"
        }
      },
      "pre.proc": [
        {
          "dsl.type": "spark-sql",
          "in.dataframe.name": "kafka",
          "out.dataframe.name": "out0",
          "rule": "select CAST(value AS STRING) as value from kafka"
        },
        {
          "dsl.type": "df-ops",
          "in.dataframe.name": "out0",
          "out.dataframe.name": "out1",
          "rule": "from_json",
          "details": {
            "col.name": "value",
            "schema": "{\\\"type\\\":\\\"struct\\\",\\\"fields\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\",\\\"nullable\\\":true,\\\"metadata\\\":{}},{\\\"name\\\":\\\"age\\\",\\\"type\\\":\\\"integer\\\",\\\"nullable\\\":true,\\\"metadata\\\":{}}]}"
          }
        },
        {
          "dsl.type": "spark-sql",
          "in.dataframe.name": "out1",
          "out.dataframe.name": "out3",
          "rule": "select name, age from out1"
        }
      ]
    }
  ],
  "evaluate.rule": {
    "rules": [
      {
        "dsl.type": "griffin-dsl",
        "dq.type": "profiling",
        "out.dataframe.name": "metric1df",
        "rule": "select count(name) as `cnt`, max(age) as `max`, min(age) as `min` from source",
        "out": [
          {
            "name": "metric1",
            "type": "metric"
          }
        ]
      },
      {
        "dsl.type": "griffin-dsl",
        "dq.type": "profiling",
        "out.dataframe.name": "metric2df",
        "rule": "select name, count(*) as `cnt` from source group by name",
        "out": [
          {
            "name": "metric2",
            "type": "metric",
            "flatten": "array"
          }
        ]
      }
    ]
  },
  "sinks": [
    "consoleSink"
  ]
}
